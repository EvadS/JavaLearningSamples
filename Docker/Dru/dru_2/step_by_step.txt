
step 1 
docker run -it --name my-image-name alpine sh

#запускаем  образ с именем -image-name
#на базе образа alpine
#в запущенном образе страртонет консоль
-----------------------------------
Сохраняем образ для заивки на докер хаб
docker commit my-image-name sevad/my-image-name:v10.16

docker login 
docker push sevad/my-image-name:v10.16

docker rmi sevad/my-image-name:v10.16
docker pull sevad/my-image-name:v10.16

---------------------------------------------------

docker build -f Dockerfile -t sevad/my-container-name:v1 .

--Successfully tagged sevad/my-conatainer-name:v1

 docker run -p3000:8080  -it sevad/my-container-name:v1

docker run -p3000:8080  -it  --name MY_TEST_CONTAINER  sevad/my-container-name:v1
-----------------------------------------------------------------------------
явно указываем имя образа (+ версия ) с явный указанием контенера
docker build -t my-test-server:v1   --file Dockerfile.ex .
 docker run -it --name WEB_CONTAINER -p 3000:8080 my-test-server:v1

---------------------------------------
дропаем конейнер 
docker rm [ContainerID]

открываем консоль 
 docker run -it --name WEB_CONTAINER -p 3000:8080 my-test-server:v1 sh

переходим в workdir (берем значение из Dockerfile)
cd /home/server/

------------------ 
вариант когда контейнер из гита (разворачиваем внутри)
docker build -t  drucoder/webserver-internal:v1.1 -f Dockerfile.in .




